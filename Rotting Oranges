class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        vector<vector<int>>v;
        int total=0;
        if(grid.size()==0)
        {
            return 0;
        }
     for(int i=0;i<grid.size();i++)
     {
         for(int j=0;j<grid[i].size();j++)
         {
             if(grid[i][j]==2)
             {   total++;
                 v.push_back({i,j});
                 grid[i][j]=3;
             }
             if(grid[i][j]==1)
             {
                 total++;
             }
         }
     }
        if(total==0)
        {
            return 0;
        }
        int co=0;
        int ch=0;
        
     while(!v.empty())
     {
         int s=v.size();
         ch=ch+s;
         for(int i=0;i<s;i++)
         {
            int j=v[0][0];
             int k=v[0][1];
             if(j-1>=0 && grid[j-1][k]==1)
             {
                 v.push_back({j-1,k});
                 grid[j-1][k]=3;
             }
             if(j+1<grid.size() && grid[j+1][k]==1)
             {   
                 cout<<j+1<<" ";
                 v.push_back({j+1,k});
                 grid[j+1][k]=3;
             }
             if(k-1>=0 && grid[j][k-1]==1)
             {
                 v.push_back({j,k-1});
                 grid[j][k-1]=3;
             }
             if(k+1<grid[0].size() && grid[j][k+1]==1)
             {
                 v.push_back({j,k+1});
                 grid[j][k+1]=3;
             }
             v.erase(v.begin());
         }
         co++;
     }
        
        if(ch==total)
        {
            return co-1;
        }
        return -1;
    }
};
